# .github/workflows/ci.yml
name: CI
on:
  # Running CI on all commits on all branches (implicitly covers pull request too)
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress:  ${{ github.ref_name != 'main' }}

jobs:
  earthly:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        distro: [bookworm]
    env:
      FORCE_COLOR: 1
    steps:
      - uses: earthly/actions-setup@v1
        with:
          version: "0.8.15"
      - uses: actions/checkout@v4
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
          else
            branch="${GITHUB_REF##*/}"
          fi
          git checkout -b "$branch" || true
      - name: Run build
        run: earthly --ci +all --distro=${{ matrix.distro }}
  linux-x64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Build dependencies
        run: ceedling --mixin=linux_x64 clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          ./wolfcrypt/test/testwolfcrypt
      - name: Run build and test
        run: ceedling --mixin=linux_x64 test:all --verbosity=debug
  linux-multithread:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Build dependencies
        run: ceedling --mixin=linux_multithread clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          ./wolfcrypt/test/testwolfcrypt
      - name: Run build and test
        run: ceedling --mixin=linux_multithread test:all --verbosity=debug
  linux-386:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install gcc multi lib
        run: |
          sudo apt update
          sudo apt install -y gcc-multilib
      - name: Build dependencies
        run: ceedling --mixin=linux_386 clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          ./wolfcrypt/test/testwolfcrypt
      - name: Run build and test
        run: ceedling --mixin=linux_386 test:all --verbosity=debug
  linux-arm64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install ARM Tools
        run: |
          sudo apt update
          sudo apt install -y crossbuild-essential-arm64 qemu-user
      - name: Build dependencies
        run: CROSS_COMPILE="aarch64-linux-gnu" CC="aarch64-linux-gnu-gcc" ceedling --mixin=linux_arm64 clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          QEMU_LD_PREFIX=/usr/aarch64-linux-gnu ./wolfcrypt/test/testwolfcrypt
      - name: Run build
        run: CC="aarch64-linux-gnu-gcc" ceedling --mixin=linux_arm64 release --verbosity=debug
  linux-arm:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install ARM Tools
        run: |
          sudo apt update
          sudo apt install -y crossbuild-essential-armhf qemu-user
      - name: Build dependencies
        run: CROSS_COMPILE="arm-linux-gnueabihf" CC="arm-linux-gnueabihf-gcc" ceedling --mixin=linux_arm clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf ./wolfcrypt/test/testwolfcrypt
      - name: Run build
        run: CC="arm-linux-gnueabihf-gcc" ceedling --mixin=linux_arm release --verbosity=debug
  linux-arm-no-pqc:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install ARM Tools
        run: |
          sudo apt update
          sudo apt install -y crossbuild-essential-armhf qemu-user
      - name: Build dependencies
        run: CROSS_COMPILE="arm-linux-gnueabihf" CC="arm-linux-gnueabihf-gcc" ceedling --mixin=linux_arm_no_pqc clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf ./wolfcrypt/test/testwolfcrypt
      - name: Run build
        run: CC="arm-linux-gnueabihf-gcc" ceedling --mixin=linux_arm_no_pqc release --verbosity=debug
  linux-riscv64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install RISC-V Toolchain
        run: |
          sudo apt update
          sudo apt install -y crossbuild-essential-riscv64 qemu-user
      - name: Build dependencies
        run: CROSS_COMPILE="riscv64-linux-gnu" CC="riscv64-linux-gnu-gcc" ceedling --mixin=linux_riscv64 clobber dependencies:make --verbosity=debug
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl/source
          QEMU_LD_PREFIX=/usr/riscv64-linux-gnu ./wolfcrypt/test/testwolfcrypt
      - name: Run build
        run: CC="riscv64-linux-gnu-gcc" ceedling --mixin=linux_riscv64 release --verbosity=debug
  macos-x64:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install automake
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool
      - name: Build dependencies
        run: ceedling --mixin=macos_x64 clobber dependencies:make --verbosity=debug
      - name: Run build and test
        run: ceedling --mixin=macos_x64 clobber test:all --verbosity=debug
  macos-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install automake
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool
      - name: Build dependencies
        run: ceedling --mixin=macos_arm64 clobber dependencies:make --verbosity=debug
      - name: Run build and test
        run: ceedling --mixin=macos_arm64 clobber test:all --verbosity=debug
  windows:
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        config:
          [
            { project: windows_64, arch: x64 },
            { project: windows_64_multithread, arch: x64 },
            { project: windows_32, arch: x86 },
            { project: windows_arm64, arch: amd64_arm64 },
          ]
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: gem install ceedling --no-user-install
      - name: Check Ceedling version
        run: ceedling version
      - name: Set up Visual Studio shell
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: ${{ matrix.config.arch }}
      - if: ${{ matrix.config.project != 'windows_arm64' }}
      # Skip making dependencies for ARM64 as we can only apply git patch once for WolfSSL
        name: Build dependencies
        run: ceedling --project=ceedling/${{ matrix.config.project }}.yml clobber dependencies:make --verbosity=debug
      - if: ${{ matrix.config.project != 'windows_arm64' }}
        name: Run build and test
        run: ceedling --project=ceedling/${{ matrix.config.project }}.yml test:all --verbosity=debug
      - if: ${{ matrix.config.project == 'windows_arm64' }}
        name: Run build
        run: ceedling --project=ceedling/${{ matrix.config.project }}.yml release
  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install automake
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool
      - name: Run build
        run: ceedling --project=ceedling/ios.yml release --verbosity=debug
      - name: Copy all public headers into the umbrella framework
        run: cp public/*.h ios/Lightway/Lightway
      - name: Build xcframework
        run: |
          cd ios/Lightway
          ./build-xcframework.sh
  tvos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install automake
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool
      - name: Run build
        run: ceedling --project=ceedling/tvos.yml release --verbosity=debug
  android:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        arch: [armeabi-v7a, arm64-v8a, x86, x86_64]
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Run build
        run: |
          source android/android_env.sh ${{ matrix.arch }}
          ceedling --mixin=android release --verbosity=debug
