# .github/workflows/ci.yml
name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  earthly:
    runs-on: ubuntu-20.04
    env:
      FORCE_COLOR: 1
    steps:
      - uses: earthly/actions/setup-earthly@v1
        with:
          version: v0.6.30
      - uses: actions/checkout@v2
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
          else
            branch="${GITHUB_REF##*/}"
          fi
          git checkout -b "$branch" || true
      - name: Run build
        run: earthly --ci +all
  fuzz:
    runs-on: ubuntu-20.04
    env:
      FORCE_COLOR: 1
    steps:
      - uses: earthly/actions/setup-earthly@v1
        with:
          version: v0.6.30
      - uses: actions/checkout@v2
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
          else
            branch="${GITHUB_REF##*/}"
          fi
          git checkout -b "$branch" || true
      - name: Run build
        run: earthly --ci +fuzz
  linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Build dependencies
        run: ceedling project:linux clobber dependencies:make
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl
          ./wolfcrypt/test/testwolfcrypt
      - name: Run build and test
        run: ceedling project:linux
  linux-386:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install gcc multi lib
        run: sudo apt install -y gcc-multilib
      - name: Build dependencies
        run: ceedling project:linux_386 clobber dependencies:make
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl
          ./wolfcrypt/test/testwolfcrypt
      - name: Run build and test
        run: ceedling project:linux_386
  linux-arm64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install ARM Tools
        run: |
          sudo apt update
          sudo apt install -y crossbuild-essential-arm64 qemu-user
      - name: Build dependencies
        run: CROSS_COMPILE="aarch64-linux-gnu" CC="aarch64-linux-gnu-gcc" ceedling project:linux_arm clobber dependencies:make
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl
          QEMU_LD_PREFIX=/usr/aarch64-linux-gnu ./wolfcrypt/test/testwolfcrypt
      - name: Run build
        run: CC="aarch64-linux-gnu-gcc" ceedling project:linux_arm release
  linux-arm:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install ARM Tools
        run: |
          sudo apt update
          sudo apt install -y crossbuild-essential-armhf qemu-user
      - name: Build dependencies
        run: CROSS_COMPILE="arm-linux-gnueabihf" CC="arm-linux-gnueabihf-gcc" ceedling project:linux_arm clobber dependencies:make
      - name: Run wolfSSL Tests
        run: |
          cd third_party/wolfssl
          QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf ./wolfcrypt/test/testwolfcrypt
      - name: Run build
        run: CC="arm-linux-gnueabihf-gcc" ceedling project:linux_arm release
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install automake
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool
      - name: Build dependencies
        run: ceedling project:macos clobber dependencies:make
      - name: Run build and test
        run: ceedling project:macos
  windows-64bit:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: gem install ceedling --no-user-install
      - name: Check Ceedling version
        run: ceedling version
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
      - name: Build dependencies
        run: ceedling project:windows_64 clobber dependencies:make
      - name: Run build and test
        run: ceedling project:windows_64
  windows-32bit:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: gem install ceedling --no-user-install
      - name: Check Ceedling version
        run: ceedling version
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x86
      - name: Build dependencies
        run: ceedling project:windows_32 clobber dependencies:make
      - name: Run build and test
        run: ceedling project:windows_32
  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Install automake
        run: HOMEBREW_NO_AUTO_UPDATE=1 brew install autoconf automake libtool
      - name: Run build
        run: ceedling project:ios release
      - name: Copy all public headers into the umbrella framework
        run: cp public/*.h ios/Lightway/Lightway
      - name: Build xcframework
        run: |
          cd ios/Lightway
          ./build-xcframework.sh
  android-armeabi-v7a:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Run build
        run: |
          source android/android_env.sh armeabi-v7a
          ceedling project:android release
  android-arm64-v8a:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Run build
        run: |
          source android/android_env.sh arm64-v8a
          ceedling project:android release
  android-x86:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Run build
        run: |
          source android/android_env.sh x86
          ceedling project:android release
  android-x86_64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Ceedling
        run: sudo gem install ceedling --no-user-install
      - name: Run build
        run: |
          source android/android_env.sh x86_64
          ceedling project:android release
